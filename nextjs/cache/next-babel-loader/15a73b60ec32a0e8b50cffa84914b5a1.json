{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desenvolvedor\\\\nextjs\\\\next-firebase-test\\\\pages\\\\blog\\\\[pid].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Error from \"next/error\";\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  _s();\n\n  var user = _ref.user;\n\n  var _useRouter = useRouter(),\n      isFallback = _useRouter.isFallback;\n\n  if (!isFallback && !post) {\n    return __jsx(Error, {\n      statusCode: 404,\n      title: \"No Blog Post with the provided ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (isFallback) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, \"Carregando...\");\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, post.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, post.blurb), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: post.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Post, \"Ch/bV+mPq0h+JIhwQrjzTmaO/YQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Desenvolvedor/nextjs/next-firebase-test/pages/blog/[pid].tsx"],"names":["useRouter","Error","Post","user","isFallback","post","title","blurb","__html","content"],"mappings":";;;;;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAMA,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,mBACdH,SAAS,EADK;AAAA,MAC7BI,UAD6B,cAC7BA,UAD6B;;AAEpC,MAAI,CAACA,UAAD,IAAe,CAACC,IAApB,EAA0B;AAC3B,WAAO,MAAC,KAAD;AAAO,MAAA,UAAU,EAAE,GAAnB;AAAwB,MAAA,KAAK,EAAC,mCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACA,MAAID,UAAJ,EAAgB;AACd,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAI,CAACC,KAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,KAAT,CAFF,EAGE;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEH,IAAI,CAACI;AAAf,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;GAfuBP,I;UACCF,S;;;KADDE,I","sourcesContent":["import { GetStaticPaths, GetStaticProps } from \"next\";\r\nimport { useRouter } from \"next/router\";\r\nimport Error from \"next/error\";\r\n\r\nconst FirestoreBlogPostsURL = `https://firestore.googleapis.com/v1/projects/${process.env.FIREBASE_PROJECT_ID}/databases/(default)/documents/posts`;\r\nconst fetcher = (url) => fetch(url).then((r) => r.json());\r\n\r\n\r\nexport default function Post({ user }) {\r\n  const { isFallback } = useRouter();\r\n  \tif (!isFallback && !post) {\r\n\t\treturn <Error statusCode={404} title=\"No Blog Post with the provided ID\" />;\r\n\t}\r\n  if (isFallback) {\r\n    return <p>Carregando...</p>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.blurb}</p>\r\n      <div dangerouslySetInnerHTML={{ __html: post.content }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  return {\r\n    paths: [],\r\n    fallback: true,\r\n  };\r\n};\r\n\r\nexport const getStaticProps: GetStaticProps = async ({params}) => {\r\n  try {\r\n\t\t// Call an external API endpoint to get posts.\r\n\t\tconst post = await fetcher(`${FirestoreBlogPostsURL}/NKM7HGhMNfdjfZWJm4t5`); // grabs the whole document with the provided document id (in this case pid)\r\n\t\tconsole.log(post)\r\n    // By returning { props: posts }, the Blog component\r\n\t\t// will receive `posts` as a prop at build time\r\n\t\treturn {\r\n\t\t\tprops: {\r\n\t\t\t\tpost: {\r\n\t\t\t\t\tpid: \"NKM7HGhMNfdjfZWJm4t5\",\r\n\t\t\t\t\ttitle: post.fields.title.stringValue,\r\n\t\t\t\t\tblurb: post.fields.blurb.stringValue,\r\n\t\t\t\t\tcontent: post.fields.content.stringValue, // html content should be sanitized before using React's dangerouslySetInnerHTML\r\n\t\t\t\t},\r\n        revalidate: 10000,\r\n\t\t\t},\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tconsole.error(error);\r\n\t\treturn { props: {} };\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}