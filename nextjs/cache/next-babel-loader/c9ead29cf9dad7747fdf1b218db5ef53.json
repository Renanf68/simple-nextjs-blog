{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport Link from \"next/link\";\nimport { generatePosts } from \"../../helpers/utils\"; // Only fetch the title and blurb.\n\nconst FirestoreBlogPostsURL = `https://firestore.googleapis.com/v1/projects/${process.env.FIREBASE_PROJECT_ID}/databases/(default)/documents/posts?mask.fieldPaths=blurb&mask.fieldPaths=title`;\n\nconst fetcher = url => fetch(url).then(r => r.json());\n\nexport async function getServerSideProps(context) {\n  const data = await fetcher(FirestoreBlogPostsURL);\n  const posts = generatePosts(data);\n  return {\n    props: {\n      posts\n    }\n  };\n}\n\nfunction Blog(props) {\n  const initialData = props.posts;\n  const {\n    data\n  } = useSWR(FirestoreBlogPostsURL, fetcher, {\n    initialData\n  }); // initialData is already transformed, so only transform refetches\n\n  const posts = data.documents ? generatePosts(data) : data;\n  return __jsx(\"div\", null, data && posts.map((post, index) => __jsx(\"div\", {\n    key: index,\n    className: \"card\"\n  }, __jsx(Link, {\n    href: \"blog/[pid]\",\n    as: `/blog/${post.pid}`\n  }, __jsx(\"a\", null, __jsx(\"h3\", null, post.title, \" \\u2192\"), __jsx(\"p\", null, post.blurb))))));\n}\n\nexport default Blog;","map":null,"metadata":{},"sourceType":"module"}